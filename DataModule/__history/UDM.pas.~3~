unit UDM;

interface

uses
  System.SysUtils, System.Classes, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.Phys.FB,
  FireDAC.Phys.FBDef, FireDAC.VCLUI.Wait, FireDAC.Phys.PGDef,
  FireDAC.Phys.MySQLDef, ZAbstractConnection, ZConnection, FireDAC.Phys.MySQL,
  FireDAC.Phys.PG, FireDAC.Phys.IBBase, FireDAC.Comp.UI, uDWAbout,
  uRESTDWPoolerDB, Data.DB, FireDAC.Comp.Client;

type
  TTipoEngine = (tpRDW, tpFireDAC, tpZeos);
  TTipoBanco = (tpFB, tpPG, tpMySQL);

type
  TDataModule1 = class(TDataModule)
    FDConnection: TFDConnection;
    RESTDWDataBase: TRESTDWDataBase;
    FDGUIxWaitCursor: TFDGUIxWaitCursor;
    FDPhysFBDriverLink: TFDPhysFBDriverLink;
    FDPhysPgDriverLink: TFDPhysPgDriverLink;
    FDPhysMySQLDriverLink: TFDPhysMySQLDriverLink;
    ZConnection1: TZConnection;
  private
    { Private declarations }
  public
    function GetConexao: TComponent;
  end;

var
  DataModule1: TDataModule1;
  Fparametros: TTipoEngine;

implementation

{%CLASSGROUP 'System.Classes.TPersistent'}

{$R *.dfm}

{ TDataModule1 }

function TDataModule1.GetConexao: TComponent;
begin
  case Fparametros of
    tpRDW    : Result := RESTDWDataBase;
    tpFireDAC: Result := FDConnection;
    tpZeos   : Result := ZConnection1;
  end;
end;

end.
